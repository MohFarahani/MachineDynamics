function y=Sixmember(x)
clc;
clear('all');
global ad ab bc cd de ad ef la t2 w2 a2 t3 t4 w3 w4 a3 a4 r5 t6 w6 v5 a6 aa
fprintf('please enter the length(m) of  members by the order which is given:\n');
ab=input('AB=    ');
bc=input('                    BC=    ');
cd=input('\n CD=    ');
de=input('                    DE=    ');
ef=input('\n EF=    ');
ad=input('                    AD=    ');
la=input('the value of LA is:  ');
p2=input('\n pleas enter the value of :\n t2(deg)=    ');
t2=p2*pi/180;
w2=input('          w2(rad/s)=    ');
a2=input('                              a2(rad/s^2)=    ');
fprintf('pleas enter the masses(kg)\n');
m2=input('\n M2= ');
m3=input('                    M3=');
m4=input('\n M4=');
m5=input('                    M5=');
m6=input('\n M6=');
options=optimset('Display','off');
f=input('pleas enter the cooefficient of friction:   ');
x0=[3 2];
z=fsolve(@equation1,x0);
t3=z(1,1);
t4=z(1,2);
z=fsolve(@equation2,x0);
w3=z(1,1);
w4=z(1,2);
z=fsolve(@equation3,x0);
a3=z(1,1);
a4=z(1,2);
z=fsolve(@equation4,x0);
r5=z(1,1);
t6=z(1,2);
z=fsolve(@equation5,x0);
w6=z(1,1);
v5=z(1,2);
z=fsolve(@equation6,x0);
a6=z(1,1);
aa=z(1,2);
ag3x=-ab*(w2)^2*cos(t2)-0.5*bc*(w3)^2*cos(t3)-0.5*a3*sin(t3)-ab*a2*sin(t2);
ag3y=-ab*(w2)^2*sin(t2)-0.5*bc*(w3)^2*sin(t3)+0.5*a3*cos(t3)+ab*a2*cos(t2);
ag2=0.5*ab*(w2)^2;
ig2=(1/12)*m2*ab^3;
ig3=(1/12)*m3*bc^3;
ig4=(1/12)*m4*(cd+de)^3;
id4=ig4+m4*(cd-0.5*(cd+de))^2;
ig6=(1/12)*m6*ef^3;
if6=ig6+m6*(0.5*ef)^2;
n=[1 0 -1 0 0 0 0 0 0 0 0 0 0 0;
   0 1 0 -1 0 0 0 0 0 0 0 0 0 0;
   0 0 ab*sin(t2) -ab*cos(t2) 0 0 0 0 0 0 0 0 0 1;
   0 0 1 0 -1 0 0 0 0 0 0 0 0 0;
   0 0 0 1 0 -1 0 0 0 0 0 0 0 0;
   0 0 0.5*bc*sin(t3) -0.5*bc*cos(t3) 0.5*bc*sin(t3) -0.5*bc*cos(t3) 0 0 0 0 0 0 0 0;
   0 0 0 0 1 0 1 0 -1 0 0 0 0 0;
   0 0 0 0 0 1 0 1 0 -1 0 0 0 0 ;
   0 0 0 0 cd*sin(t4) -cd*cos(t4) 0 0 de*sin(t4) -de*cos(t4) 0 0 0 0;
   0 0 0 0 0 0 0 0 -1 0 1 0 0 0;
   0 0 0 0 0 0 0 0 0 1 0 -1 0 0;
   0 0 0 0 0 0 0 0 ef*sin(t6) -ef*cos(t6) 0 0 0 0;
   0 0 0 0 0 0 0 0 0 0 0 1 1 0;
   0 0 0 0 0 0 0 0 0 0 1 0 f 0];
q=zeros(14,1);
w=[-m2*ag2*cos(t2); -m2*ag2*sin(t2); ig2*a2+0.5*ab*(a2)^2 ;m3*ag3x ;m3*ag3y ;ig3*a3; 0; 0; -id4*a4 ;m5*aa; 0; if6*a6 ;0 ;-m5*aa];
q=n\w;
clc;
fprintf('AB= %5.3f ,BC= %5.3f ,CD= %5.3f ,DE= %5.3f ,EF= %5.3f ,AD= %5.3f ,LA= %5.3f \n',ab,bc,cd,de,ef,ad,la);
fprintf('Angular(2)= %7.3f ,Angular Velocity(2)= %7.3f ,Angular Acceleration= %7.3f \n',p2,w2,a2);
fprintf('\n|-----------------------------------|----------------------------------------|\n');
fprintf('|             passive               |  value(m/s,m/s^2,rad/s,rad/s^2)        |\n');
fprintf('|-----------------------------------|----------------------------------------|\n');
fprintf('| Angular of member BC              |       %16.10f                 |\n',t3);
fprintf('| Angular of memberCD               |       %16.10f                 |\n',t4);
fprintf('| Angular Velocity of member Bc     |       %16.10f                 |\n',w3);
fprintf('| Angular Velocity of member CD     |       %16.10f                 |\n',w4);
fprintf('| Angular Acceleration of member BC |       %16.10f                 |\n',a3);
fprintf('| Angular Acceleration of member BC |       %16.10f                 |\n',a4);
fprintf('| Distance member5 from jointD      |       %16.10f                 |\n',r5);
fprintf('| Angular of member EF              |       %16.10f                 |\n',t6);
fprintf('| Angular Velocity of member EF     |       %16.10f                 |\n',w6);
fprintf('| Velocity of member 5              |       %16.10f                 |\n',v5);
fprintf('| Angular Acceleration of member EF |       %16.10f                 |\n',a6);
fprintf('| Acceleration of member 5          |       %16.10f                 |\n',aa);
fprintf('\n|-----------------------------------|----------------------------------------|\n');
fprintf('\n|-----------------------------|---------------------|\n');
fprintf('|          Force              |     Value(N)        |\n');
fprintf('|-----------------------------|---------------------|\n');
fprintf('| At joint A,X direction      | %16.10f    |\n',q(1,1));
fprintf('| At joint A,Y direction      | %16.10f    |\n',q(2,1));
fprintf('| At joint B,X direction      | %16.10f    |\n',q(3,1));
fprintf('| At joint B,Y direction      | %16.10f    |\n',q(4,1));
fprintf('| At joint C,X direction      | %16.10f    |\n',q(5,1));
fprintf('| At joint C,Y direction      | %16.10f    |\n',q(6,1));
fprintf('| At joint D,X direction      | %16.10f    |\n',q(7,1));
fprintf('| At joint D,Y direction      | %16.10f    |\n',q(8,1));
fprintf('| At joint E,X direction      | %16.10f    |\n',q(9,1));
fprintf('| At joint E,Y direction      | %16.10f    |\n',q(10,1));
fprintf('| At joint F,X direction      | %16.10f    |\n',q(11,1));
fprintf('| At joint F,Y direction      | %16.10f    |\n',q(12,1));
fprintf('| Normal Force at member 5    | %16.10f    |\n',q(13,1));
fprintf('| Torque(N.m) at joint A      | %16.10f    |\n',q(14,1));
fprintf('|-----------------------------|---------------------|\n');
ag2x=-0.5*(ab)*cos(t2)*(w2)^2-0.5*(ab)*a2*sin(t2);
ag2y=0.5*(ab)*sin(t2)*(w2)^2-0.5*(ab)*a2*cos(t2);
acbx=-1*(bc)*cos(t3)*(w3)^2-(bc)*a3*sin(t3);
acby=-1*(bc)*sin(t3)*(w3)^2+(bc)*a3*cos(t3);
acx=2*ag2x+acbx;
acy=2*ag2y+acby;
d=abs(cd-0.5*(cd+de));
ag4x=-d*(w4)^2*cos(t4)-d*a4*sin(t4);
ag4y=d*(w4)^2*sin(t4)-d*a4*cos(t4);
aex=de*(w4)^2*cos(t4)+de*(a4)*sin(t4);
aey=de*(w4)^2*sin(t4)-de*(a4)*cos(t4);
ag6ex=-0.5*(w6)^2*ef*cos(t4)-0.5*ef*a6*sin(t4);
ag6ey=-0.5*(w6)^2*ef*sin(t4)+0.5*ef*a6*cos(t4);
ag6x=aex+ag6ex;
ag6y=aey+ag6ey;
fx=m2*(ag2x)+m3*(ag3x)+m4*(ag4x)+m5*aa+m6*(ag6x);
fy=m2*(ag2y)+m3*(ag3y)+m4*(ag4y)+m6*(ag6y);
fprintf('-------------------------------------------------------------------\n');
fprintf('Inertia Force at X direction:  %7.3f \n',fx);
fprintf('Inertia Force at Y direction:  %7.3f  \n',fy);
fprintf('-------------------------------------------------------------------\n');
f=sqrt((fx)^2+(fy)^2);
tf=atan((fy)/(fx));
fprintf('Inertia Force(N) is: %7.3f \n',f);
fprintf('And angular(deg) with X Direction is: %7.3f \n',tf);
k=input('Now if you want to see the diagram of Input Angular to Acceleration press botton 1 else enter zero:  ');
while k==1
    j=1;
    s=0;
    fmax=0;
    af=acos(((ab+bc)^2+(ad)^2-(cd)^2)/(2*ad*(ab+bc)));
    ss=af*180/pi;
    for i=ss:5:360+ss
        p2(1,j)=i;
        t2=p2(1,j)*pi/180;
        x0=[3 2];
z=fsolve(@equation1,x0);
t3=z(1,1);
t4=z(1,2);
z=fsolve(@equation2,x0);
w3=z(1,1);
w4=z(1,2);
z=fsolve(@equation3,x0);
a3=z(1,1);
a4=z(1,2);
z=fsolve(@equation4,x0);
r5=z(1,1);
t6=z(1,2);
z=fsolve(@equation5,x0);
w6=z(1,1);
v5=z(1,2);
z=fsolve(@equation6,x0);
a6=z(1,1);
aa=z(1,2);
ag3x=-ab*(w2)^2*cos(t2)-0.5*bc*(w3)^2*cos(t3)-0.5*a3*sin(t3)-ab*a2*sin(t2);
ag3y=-ab*(w2)^2*sin(t2)-0.5*bc*(w3)^2*sin(t3)+0.5*a3*cos(t3)+ab*a2*cos(t2);
ag2=0.5*ab*(w2)^2;
ig2=(1/12)*m2*ab^3;
ig3=(1/12)*m3*bc^3;
ig4=(1/12)*m4*(cd+de)^3;
id4=ig4+m4*(cd-0.5*(cd+de))^2;
ig6=(1/12)*m6*ef^3;
if6=ig6+m6*(0.5*ef)^2;
n=[1 0 -1 0 0 0 0 0 0 0 0 0 0 0;
   0 1 0 -1 0 0 0 0 0 0 0 0 0 0;
   0 0 ab*sin(t2) -ab*cos(t2) 0 0 0 0 0 0 0 0 0 1;
   0 0 1 0 -1 0 0 0 0 0 0 0 0 0;
   0 0 0 1 0 -1 0 0 0 0 0 0 0 0;
   0 0 0.5*bc*sin(t3) -0.5*bc*cos(t3) 0.5*bc*sin(t3) -0.5*bc*cos(t3) 0 0 0 0 0 0 0 0;
   0 0 0 0 1 0 1 0 -1 0 0 0 0 0;
   0 0 0 0 0 1 0 1 0 -1 0 0 0 0 ;
   0 0 0 0 cd*sin(t4) -cd*cos(t4) 0 0 de*sin(t4) -de*cos(t4) 0 0 0 0;
   0 0 0 0 0 0 0 0 -1 0 1 0 0 0;
   0 0 0 0 0 0 0 0 0 1 0 -1 0 0;
   0 0 0 0 0 0 0 0 ef*sin(t6) -ef*cos(t6) 0 0 0 0;
   0 0 0 0 0 0 0 0 0 0 0 1 1 0;
   0 0 0 0 0 0 0 0 0 0 1 0 f 0];
q=zeros(14,1);
w=[-m2*ag2*cos(t2); -m2*ag2*sin(t2); ig2*a2+0.5*ab*(a2)^2 ;m3*ag3x ;m3*ag3y ;ig3*a3; 0; 0; -id4*a4 ;m5*aa; 0; if6*a6 ;0 ;-m5*aa];
q=n\w;
ve(1,j)=v5;
o(1,j)=aa;
j=j+1;
if abs(q(14,1))>s
    s=abs(q(14,1));
end
if abs(q(11,1))>fmax
    fmax=abs(q(11,1));
end
    end
    hold on
    grid on
    plot(p2,o);
    title('Acceleration V.S Angular');
    xlabel('Angular(deg)'),ylabel('Acceleration(m/s^2)');
    grid on
    figure
    plot(p2,ve);
    title('Velocity V.S Angular');
    xlabel('Angular(deg)'),ylabel('Velocity(m/s)');
    k=0;
end
power=s*(w2);
fprintf('The Maximum Product Force(N) is:  %7.3f \n',fmax);
fprintf('The power(w) that we need is:  %7.3f \n',power);
af=acos(((ab+bc)^2+(ad)^2-(cd)^2)/(2*ad*(ab+bc)));
ar=acos(((bc-ab)^2+(ad)^2-(cd)^2)/(2*ad*abs(bc-ab)));
returnAngular=pi+ar-af;
forwardAngular=2*pi-returnAngular;
timeratio=(forwardAngular)/(returnAngular);
fprintf('The ratio of the forward time to return time(Time Ratio)is:  %7.3f \n',timeratio);
fprintf('%7.3\n',ss)





